// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PrintManagement.Data;

namespace PrintManagement.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200921025720_Imp")]
    partial class Imp
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PrintManagement.Models.ContadorDeImpressao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataLeitura")
                        .HasColumnType("datetime2");

                    b.Property<long>("IdDepartamento")
                        .HasColumnType("bigint");

                    b.Property<long>("IdEmpressora")
                        .HasColumnType("bigint");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdDepartamento");

                    b.HasIndex("IdEmpressora");

                    b.ToTable("ContadorDeImpressao");
                });

            modelBuilder.Entity("PrintManagement.Models.ContratoDeImpressora", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("Franquia")
                        .HasColumnType("int");

                    b.Property<long>("Idfornecedor")
                        .HasColumnType("bigint");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("ValorContrato")
                        .HasColumnType("real");

                    b.Property<float>("ValorExcedente")
                        .HasColumnType("real");

                    b.Property<int>("Vigencia")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Idfornecedor")
                        .IsUnique();

                    b.ToTable("ContratoDeImpressora");
                });

            modelBuilder.Entity("PrintManagement.Models.Departamento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departamento");
                });

            modelBuilder.Entity("PrintManagement.Models.Filial", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DDD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Filial");
                });

            modelBuilder.Entity("PrintManagement.Models.Fornecedor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contato")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Site")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Fornecedor");
                });

            modelBuilder.Entity("PrintManagement.Models.Impressora", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("IdContratoDeImpressora")
                        .HasColumnType("bigint");

                    b.Property<long>("IdDepartamento")
                        .HasColumnType("bigint");

                    b.Property<long>("IdFilial")
                        .HasColumnType("bigint");

                    b.Property<long>("IdModelo")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Serial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("derpartamentoId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("IdContratoDeImpressora");

                    b.HasIndex("IdFilial");

                    b.HasIndex("IdModelo");

                    b.HasIndex("derpartamentoId");

                    b.ToTable("Impressora");
                });

            modelBuilder.Entity("PrintManagement.Models.LogsImpressao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("LogsImpressao");
                });

            modelBuilder.Entity("PrintManagement.Models.Modelo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Modelo");
                });

            modelBuilder.Entity("PrintManagement.Models.ContadorDeImpressao", b =>
                {
                    b.HasOne("PrintManagement.Models.Departamento", "Derpartamento")
                        .WithMany("ContadorDeImpressaos")
                        .HasForeignKey("IdDepartamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrintManagement.Models.Impressora", "Impressora")
                        .WithMany("ContadorDeImpressaos")
                        .HasForeignKey("IdEmpressora")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrintManagement.Models.ContratoDeImpressora", b =>
                {
                    b.HasOne("PrintManagement.Models.Fornecedor", "Fornecedor")
                        .WithOne("ContratoDeImpressora")
                        .HasForeignKey("PrintManagement.Models.ContratoDeImpressora", "Idfornecedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrintManagement.Models.Impressora", b =>
                {
                    b.HasOne("PrintManagement.Models.ContratoDeImpressora", "ContratoDeImpressora")
                        .WithMany("Impressoras")
                        .HasForeignKey("IdContratoDeImpressora")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrintManagement.Models.Filial", "Filial")
                        .WithMany("Impressoras")
                        .HasForeignKey("IdFilial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrintManagement.Models.Modelo", "Modelo")
                        .WithMany("Impressoras")
                        .HasForeignKey("IdModelo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrintManagement.Models.Departamento", "derpartamento")
                        .WithMany("Impressoras")
                        .HasForeignKey("derpartamentoId");
                });
#pragma warning restore 612, 618
        }
    }
}
